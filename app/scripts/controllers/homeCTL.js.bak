'use strict';

/**
 * @ngdoc function
 * @name asecApp.controller:MainCtrl
 * @description
 * # MainCtrl
 * Controller of the asecApp
 */

app.controller('homeCTL',['$scope','$http', function ($scope, $http) {
	$scope.isLoaded = false;
	$scope.municipios = [];
	$scope.bubbleChartData = [];
	$scope.municipiosCoords = [];


	$scope.getMunicipioCoords = function(params){
		var address = 'address=' + params.name;
		address += 'Coahuila Mexico';

		var apiKey = '';

		var requestUrl = 
			'https://maps.googleapis.com/maps/api/geocode/json?';
		
		requestUrl += address+'&key='+apiKey;

		$http.get(requestUrl)
	  	.success(function(data, status, headers, config) {	
				console.log(data);
				$scope.municipiosCoords.push({
					'name':params.name,
					'id':params.id,
					'coords':data.results[0].geometry.location
				});
			})
		  .error(function(data, status, headers, config) {

	  	});	

	};

	$scope.printCoords = function(){
		console.dir( $scope.municipiosCoords );
		console.log( JSON.stringify($scope.municipiosCoords) );
	}

	$scope.getMunicipios = function(){
		var nMunicipios = 38;
		var baseUrl = 
			'http://desarrollo.optimit.com.mx/auditoria_coahuila/web_service.php?accion=get_n_entidades_todos_datos&id_entidad=';
		var ids = '';

		for( var i=1; i < (nMunicipios+1) ; i++ ){
			if(i == (nMunicipios) ){
				ids += i;
			}else{
				ids += i+',';				
			}
		}
		
		var requestUrl = baseUrl + ids + '&callback=JSON_CALLBACK';
		$http.jsonp(requestUrl)
	  	.success(function(data, status, headers, config) {	
			
				var offset = 0;
				_.each(data, function(mun) {
				  if(mun){	
			  		$scope.municipios.push(mun);

						
				  	setTimeout(function(){
				  		console.log('llamando api');
				  		var params = {
								'name': mun.datos_entidad.nombre_completo,
								'id': mun.datos_entidad.id
				  		};
				  		$scope.getMunicipioCoords(params);
				  	},offset);
				  	offset += 500;
				  }
				});
				$scope.isLoaded = true;
				$scope.bubbleChartData = $scope.municipios;			
			})
		  .error(function(data, status, headers, config) {
		    // called asynchronously if an error occurs
		    // or server returns response with an error status.
		  });			
	};

	$scope.getMunicipios();


    $scope.getTooltip = function(d){
			d = {
				name : 'TorreÃ³n',
				cumplimiento: 0.65
				//precio: 456,789
			};    	
      var html = '<p><strong>' + d.name + '</strong></p>';
      html += '<hr/>';
      html += '<p>Porcentaje de cumplimiento: ' + d.cumplimiento + '%</p>';
      return html;
    };	

	$scope.drawCleanMap = function(){

		var x = d3.scale.linear()
		    .domain([0, width])
		    .range([0, width]);

		var y = d3.scale.linear()
		    .domain([0, height])
		    .range([height, 0]);

		var width, height;

		/*var width = 960,
		    height = 500;*/

    width = parseInt(d3.select('#data-map-home').style('width'), 10);
    height = parseInt(d3.select('#data-map-home').style('height'), 10);	

    var coodsCenter = [-101.984106, 27.452909];	    

		var projection = d3.geo.mercator()
		    .scale(6000)
		    //.center([-102.34034978813841, 24.012062015793]);
		    .translate([width/2, (height*0.8)/2])
		    .center(coodsCenter);

    //Tooltip
    var tip = d3.tip()
      .attr('class', 'bubble-chart-tip')
      .offset([-10, 0])
      .html(function(d) {
          return $scope.getTooltip(d);
      });

		var svg = d3.select("#data-map-home").append("svg")
		    .attr("width", width)
		    .attr("height", height);

		svg.call(tip);

		var g = svg.append("g");

		d3.json("/scripts/mx_tj.json", function(error, mx) {
		  svg.selectAll("#data-map-home path")
		    //.data(topojson.feature(mx, mx.objects.municipalities).features)
		    .data(topojson.feature(mx, mx.objects.municipalities).features.filter(function(d) { return d.properties.state_code === 5; }))		    
		    .enter().append("path")
		    .attr("d", d3.geo.path().projection(projection))
		    //.attr("fill", "transparent")
		    .style("stroke", "#333")
		    .style("stroke-width", ".2px")
		    .attr("class", "muns");
		  
		  g.selectAll("#data-map-home path")
		    .data(topojson.feature(mx, mx.objects.states).features.filter(function(d) { return d.properties.state_code === 5; }))
		    .enter().append("path")
		    .attr("d", d3.geo.path().projection(projection))
		    //.attr("fill", "transparent")
		  	.style("stroke", "#fff");

		  var coordinates = projection(coodsCenter);

		  var maxR = 50;

      svg.append("circle")
				.attr("cx", coordinates[0])
				.attr("cy", coordinates[1])
				.attr("r", function(){ return 0.6*50; })
				.attr('opacity', 0.8)
				.style("stroke", "#2A82B4")
				.style("fill", "#2A82B4")
				.on('mouseover', function(d){
				  tip.show(d); 
				  d3.select(this).transition()
				  .duration(750)
				  .attr("r", function(d) { return 0.8*50; } );            
				})
				.on('mouseout', function(d){
				  tip.hide(d); 
				  d3.select(this).transition()
				  .duration(750)
				  .attr("r", function(d) { return 0.6*50; } );            
				})              

		});

	};

	$scope.drawCleanMap();	


}]);
